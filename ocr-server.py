import cv2 as cv
import json
import GetColor


dict_tem1 = {1: '立案审批表', 2: '申请执行书', 3: '受理依据及生效证明', 4: '受理案件通知书、举证通知书', 5: '案件受理费及实际支出费用收据',
                 6: '当事人身份证证明及委托代理手续', 7: '执行通知书', 8: '报告财产令、财产申报表等', 9: '限制高消费令、纳入失信被执行人名单决定书',
                 10: '专票、拘专票', 11: '强制执行措施法律文书材料', 12: '询问笔录、调查笔录、听证笔录、执行笔录', 13: '取证材料', 14: '网络查控反馈表',
                 15: '异议申请书', 16: '异议审查裁定或追加、变更执行主体裁定书', 17: '执行和解协议及履行材料', 18: '以物抵贷裁定书及相关材料',
                 19: '不予执行、中止执行、终结执行、终结本次执行裁定书', 20: '执行款物收款、交付凭证及有关审配材料', 21: '结案文书或结案审批表',
                 22: '送达回证及送达地址确认书', 23: '廉政监督卡', 24: '证物袋'}
dict_tem2 = {1: '立案审批表', 2: '申请执行书', 3: '受理依据及生效证明', 4: '受理案件通知书、举证通知书', 5: '案件受理费及实际支出费用收据',
                 6: '当事人身份证证明及委托代理手续', 7: '执行通知书', 8: '报告财产令、财产申报表等', 9: '限制高消费令、纳入失信被执行人名单决定书',
                 10: '专票、拘专票', 11: '强制执行措施法律文书材料', 12: '询问笔录、调查笔录、听证笔录、执行笔录', 13: '取证材料', 14: '网络查控反馈表',
                 15: '异议申请书', 16: '异议审查裁定或追加、变更执行主体裁定书', 17: '执行和解协议及履行材料', 18: '以物抵贷裁定书及相关材料',
                 19: '不予执行、中止执行、终结执行、终结本次执行裁定书', 20: '执行款物收款、交付凭证及有关审配材料', 21: '结案文书或结案审批表',
                 22: '送达回证及送达地址确认书', 23: '廉政监督卡', 24: '证物袋'}
dict_tem3 = {1: '立案审批表', 2: '申请执行书', 3: '受理依据及生效证明', 4: '受理案件通知书、举证通知书', 5: '案件受理费及实际支出费用收据',
                 6: '当事人身份证证明及委托代理手续', 7: '执行通知书', 8: '报告财产令、财产申报表等', 9: '限制高消费令、纳入失信被执行人名单决定书',
                 10: '专票、拘专票', 11: '强制执行措施法律文书材料', 12: '询问笔录、调查笔录、听证笔录、执行笔录', 13: '取证材料', 14: '网络查控反馈表',
                 15: '异议申请书', 16: '异议审查裁定或追加、变更执行主体裁定书', 17: '执行和解协议及履行材料', 18: '以物抵贷裁定书及相关材料',
                 19: '不予执行、中止执行、终结执行、终结本次执行裁定书', 20: '执行款物收款、交付凭证及有关审配材料', 21: '结案文书或结案审批表',
                 22: '送达回证及送达地址确认书', 23: '廉政监督卡', 24: '证物袋'}
dict_tem4 = {1: '立案审批表', 2: '申请执行书', 3: '受理依据及生效证明', 4: '受理案件通知书、举证通知书', 5: '案件受理费及实际支出费用收据',
                 6: '当事人身份证证明及委托代理手续', 7: '执行通知书', 8: '报告财产令、财产申报表等', 9: '限制高消费令、纳入失信被执行人名单决定书',
                 10: '专票、拘专票', 11: '强制执行措施法律文书材料', 12: '询问笔录、调查笔录、听证笔录、执行笔录', 13: '取证材料', 14: '网络查控反馈表',
                 15: '异议申请书', 16: '异议审查裁定或追加、变更执行主体裁定书', 17: '执行和解协议及履行材料', 18: '以物抵贷裁定书及相关材料',
                 19: '不予执行、中止执行、终结执行、终结本次执行裁定书', 20: '执行款物收款、交付凭证及有关审配材料', 21: '结案文书或结案审批表',
                 22: '送达回证及送达地址确认书', 23: '廉政监督卡', 24: '证物袋'}

dict_tem_ALL = {'dict_tem1':dict_tem1,'dict_tem2':dict_tem2,'dict_tem3':dict_tem3,'dict_tem4':dict_tem4}


with open('cut_point.json', 'r', encoding='latin-1') as load_f:
    json_dict = json.load(load_f)

def cover_judge(imagePath):
    img = cv.imread(imagePath)
    imageArr = []
    for point in json_dict['cover_point']:
        imageArr.append(img[point[1]:point[3], point[0]:point[2]])
    for i, image in enumerate(imageArr):
        #cv.imwrite('cutImahe%i.jpg'%i, image)
        print(GetColor.get_color(image))

def Directory_redress(dic, tem_str = 'dict_tem1'):
    list_error = list()
    i = 0
    for k,v in dict(dic).items():
        if dict_tem_ALL[tem_str][k] != v:
            list_error.append(v)
            i += 1
            if i == 3 and k == 3:
                s = int(tem_str[-1])+1
                if s < len(dict_tem_ALL):
                    print(str(1))
                    s1 = tem_str[:len(tem_str)-1] + str(s)
                    list_error = []
                    Directory_redress(dic, s1)
                else:
                    list_error = []
                    break
    return list_error

if __name__ == '__main__':
    # path = r'D:\ocrTestImage\00000\00001.jpg'
    # cover_judge(path)
    dict_tem = {1: '立案审批表', 2: '申请执行书', 3: '受理依据及生效证明', 4: '受理案件通知书、举证通知书', 5: '案件受理费及实际支出费用收据',
                 6: '当事人身份证证明及委托代理手续', 7: '执行通知书', 8: '报告财产令、财产申报表等', 9: '限制高消费令、纳入失信被执行人名单决定书',
                 10: '专票、拘专票', 11: '强制执行措施法律文书材料', 12: '询问笔录、调查笔录、听证笔录、执行笔录', 13: '取证材料', 14: '网络查控反馈表',
                 15: '异议申请书', 16: '异议审查裁定或追加、变更执行主体裁定书', 17: '执行和解协议及履行材料', 18: '以物抵贷裁定书及相关材料',
                 19: '不予执行、中止执行、终结执行、终结本次执行裁定书', 20: '执行款物收款、交付凭证及有关审配材料', 21: '结案文书或结案审批表',
                 22: '送达回证及送达地址确认书', 23: '廉政监督卡', 24: '证物袋'}
    print(Directory_redress(dict_tem))